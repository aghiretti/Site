{"frames":[{"func":"AutoTuner$new(learner = learners, resampling = resampling, measure = measure, \n    search_space = search_space, terminator = terminator, tuner = tuner)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"initialize(...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".__AutoTuner__initialize(self = self, private = private, super = super, \n    learner = learner, resampling = resampling, measure = measure, \n    terminator = terminator, tuner = tuner, search_space = search_space, \n    store_tuning_instance = store_tuning_instance, store_benchmark_result = store_benchmark_result,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"assert_learner(learner)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"assert_class(learner, \"Learner\", .var.name = .var.name)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"makeAssertion(x, res, .var.name, add)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mstop(\"Assertion on '%s' failed: %s.\", var.name, res, call. = sys.call(-2L))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(simpleError(sprintf(msg, ...), call.))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in assert_learner(learner) : \n  Assertion on 'learner' failed: Must inherit from class 'Learner', but has class 'list'.\n"}