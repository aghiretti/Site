"0","# bind demographic info and remove customers with missing values"
"0","data_fit <- customer_quarter %>% "
"0","  # join tables"
"0","  left_join(demo, by = c(""household_key"")) %>% "
"0","  # remove households with missing values"
"0","  drop_na()"
"0",""
"0","# rename variables for model fitting"
"0","c_name <- colnames(data_fit)"
"0","nc <- ncol(data_fit)"
"0","c_name[3] <- paste(""Y"",sep ="""",colnames(data_fit)[3])"
"0","c_name[4:nc] <- paste(paste(""X"",seq(1:(nc-3)),sep=""""),colnames(data_fit)[4:nc],sep = """")"
"0","colnames(data_fit) <- c_name"
"0",""
"0","# convert explanatory variables into factors"
"0","response <-  colnames(data_fit)[4:nc]"
"0","data_fit[response] <- lapply(data_fit[response], factor)"
"0",""
"0","# extract customers which have at least one expense in each quarter"
"0","idx = data_fit %>% group_by(household_key) %>% "
"0","  # obtain number of quarters per household"
"0","  summarise(n = n()) %>% ungroup() %>%  "
"0","  # filter out households"
"0","  filter(n==6) %>% "
"0","  # select  hoousehold key and transform it to a vector"
"0","  dplyr::select(household_key) %>% as.vector()"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","data_fit <- data_fit %>% filter(household_key %in% idx$household_key)"
